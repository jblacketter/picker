# ==============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ==============================================================================
# Copy this file to .env on your production server and update all values
# IMPORTANT: Never commit this file with real values to git!

# ==============================================================================
# Django Settings
# ==============================================================================

# Generate a new secret key for production using:
# python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-generated-secret-key-min-50-characters-long

# MUST be False in production!
DEBUG=False

# Your production domain(s) - comma separated, no spaces
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com

# ==============================================================================
# Database Configuration
# ==============================================================================

# PostgreSQL (recommended for production)
DATABASE_URL=postgresql://picker_user:your_secure_password@localhost:5432/picker_db

# Alternative: SQLite (NOT recommended for production with multiple users)
# DATABASE_URL=sqlite:///db.sqlite3

# ==============================================================================
# AI Service Configuration
# ==============================================================================

# Anthropic Claude API key
ANTHROPIC_API_KEY=sk-ant-your-production-api-key-here

# Set to False to use real Claude API
USE_STUB_AI=False

# Optional: Set daily usage limits
# MAX_TOKENS_PER_DAY=1000000
# MAX_COST_PER_DAY=50.00

# ==============================================================================
# Security Settings
# ==============================================================================

# SSL/HTTPS Settings (all should be True in production)
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

# ==============================================================================
# Email Configuration (Optional - for error notifications)
# ==============================================================================

# Gmail example (create app-specific password)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your_email@gmail.com
# EMAIL_HOST_PASSWORD=your_app_specific_password

# SendGrid example
# EMAIL_HOST=smtp.sendgrid.net
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=apikey
# EMAIL_HOST_PASSWORD=your_sendgrid_api_key

# Admin email for notifications
# ADMIN_EMAIL=admin@yourdomain.com

# ==============================================================================
# Static Files (Production)
# ==============================================================================

# No configuration needed - WhiteNoise handles static files
# Just run: python manage.py collectstatic --noinput

# ==============================================================================
# Logging
# ==============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
# LOG_LEVEL=INFO

# ==============================================================================
# Additional Security (Optional)
# ==============================================================================

# Time zone
# TIME_ZONE=America/New_York

# Language
# LANGUAGE_CODE=en-us

# ==============================================================================
# DEPLOYMENT CHECKLIST
# ==============================================================================
#
# Before deploying to production, ensure:
# [ ] DEBUG=False
# [ ] Strong SECRET_KEY generated
# [ ] ALLOWED_HOSTS set to your domain
# [ ] PostgreSQL database configured
# [ ] ANTHROPIC_API_KEY set
# [ ] SSL certificate installed
# [ ] All security settings enabled
# [ ] File permissions: chmod 600 .env
# [ ] Run: python manage.py check --deploy
# [ ] Run: python manage.py collectstatic --noinput
# [ ] Run: python manage.py migrate
# [ ] Backups configured
# [ ] Monitoring set up
#
# See docs/security-checklist.md for complete checklist
